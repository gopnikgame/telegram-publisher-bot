#!/bin/bash

# –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –≤ UTC –¥–ª—è –º–µ—Ç–æ–∫
CREATED_AT="2025-02-24 13:35:56"
CREATED_BY="gopnikgame"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    local color=$1
    local message=$2
    echo -e "${!color}${message}${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        log "RED" "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 1
    fi
    if ! command -v docker-compose &> /dev/null; then
        log "RED" "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 1
    fi
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
update_config() {
    log "BLUE" "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    # –°–æ–∑–¥–∞–µ–º .env –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if [ ! -f .env ]; then
        cat > .env << EOL
BOT_TOKEN=
ADMIN_IDS=
CHANNEL_ID=
DEFAULT_FORMAT=markdown
MAX_FILE_SIZE=20971520
MAIN_BOT_NAME=–û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
MAIN_BOT_LINK=
SUPPORT_BOT_NAME=–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞
SUPPORT_BOT_LINK=
CHANNEL_NAME=–ö–∞–Ω–∞–ª –ø—Ä–æ–µ–∫—Ç–∞
CHANNEL_LINK=
TEST_MODE=false
TEST_CHAT_ID=
HTTPS_PROXY=
EOL
    fi
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    while true; do
        log "BLUE" "üìù –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
        while IFS='=' read -r key value; do
            if [[ $key == "BOT_TOKEN" ]]; then
                if [ -n "$value" ]; then
                    log "GREEN" "‚úì BOT_TOKEN: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–¥–ª–∏–Ω–∞: ${#value} —Å–∏–º–≤–æ–ª–æ–≤)"
                else
                    log "RED" "‚úó BOT_TOKEN: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                fi
            else
                log "BLUE" "$key: $value"
            fi
        done < .env
        
        log "YELLOW" "
–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
1. –ò–∑–º–µ–Ω–∏—Ç—å BOT_TOKEN
2. –ò–∑–º–µ–Ω–∏—Ç—å ADMIN_IDS
3. –ò–∑–º–µ–Ω–∏—Ç—å CHANNEL_ID
4. –ò–∑–º–µ–Ω–∏—Ç—å –¥—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
5. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏"
        
        read -p "–í–∞—à –≤—ã–±–æ—Ä: " choice
        case $choice in
            1)
                read -p "–í–≤–µ–¥–∏—Ç–µ BOT_TOKEN: " token
                sed -i "s/^BOT_TOKEN=.*/BOT_TOKEN=$token/" .env
                ;;
            2)
                read -p "–í–≤–µ–¥–∏—Ç–µ ADMIN_IDS (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é): " admins
                sed -i "s/^ADMIN_IDS=.*/ADMIN_IDS=$admins/" .env
                ;;
            3)
                read -p "–í–≤–µ–¥–∏—Ç–µ CHANNEL_ID: " channel
                sed -i "s/^CHANNEL_ID=.*/CHANNEL_ID=$channel/" .env
                ;;
            4)
                ${EDITOR:-nano} .env
                ;;
            5)
                break
                ;;
            *)
                log "RED" "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
                ;;
        esac
    done
    
    log "BLUE" "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è .env –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    log "BLUE" "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    chmod 600 .env
    log "GREEN" "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
manage_container() {
    local action=$1
    log "BLUE" "üê≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º..."
    
    case $action in
        "restart")
            log "BLUE" "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            docker-compose down
            docker-compose up -d
            ;;
        "stop")
            log "BLUE" "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            docker-compose down
            ;;
        "start")
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ .env..."
            if [ ! -f .env ]; then
                log "RED" "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
                return 1
            fi

            # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            log "BLUE" "üìù –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
            while IFS='=' read -r key value; do
                if [[ $key == "BOT_TOKEN" ]]; then
                    if [ -n "$value" ]; then
                        log "GREEN" "‚úì BOT_TOKEN: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–¥–ª–∏–Ω–∞: ${#value} —Å–∏–º–≤–æ–ª–æ–≤)"
                    else
                        log "RED" "‚úó BOT_TOKEN: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                        return 1
                    fi
                else
                    log "BLUE" "$key: $value"
                fi
            done < .env

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env
            log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env..."

            # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            log "BLUE" "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            if docker ps -a | grep -q "telegram-publisher-bot"; then
                force_remove_container
            fi
            docker-compose up -d
            ;;
    esac
    
    local exit_code=$?
    if [ $exit_code -eq 0 ]; then
        log "GREEN" "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
        
        if [ "$action" = "start" ] || [ "$action" = "restart" ]; then
            local max_attempts=6
            local attempt=1
            
            while [ $attempt -le $max_attempts ]; do
                log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–ø–æ–ø—ã—Ç–∫–∞ $attempt –∏–∑ $max_attempts)..."
                sleep 5
                
                if ! docker ps | grep -q "telegram-publisher-bot"; then
                    log "RED" "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
                    return 1
                fi
                
                if docker logs telegram-publisher-bot 2>&1 | grep -q "BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; then
                    log "RED" "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ –Ω–µ—Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏"
                    docker-compose logs
                    return 1
                fi
                
                if docker logs telegram-publisher-bot 2>&1 | grep -q "–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"; then
                    log "GREEN" "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
                    break
                fi
                
                log "YELLOW" "‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è..."
                attempt=$((attempt + 1))
            done
            
            if [ $attempt -gt $max_attempts ]; then
                log "RED" "‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø—É—Å–∫–∞"
                docker-compose logs
                return 1
            fi
        fi
    else
        log "RED" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–∫–æ–¥: $exit_code)"
        docker-compose logs
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
force_remove_container() {
    log "BLUE" "üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    docker rm -f telegram-publisher-bot > /dev/null 2>&1
    log "GREEN" "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"
}

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        log "BLUE" "
ü§ñ Telegram Publisher Bot - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–ê–≤—Ç–æ—Ä: $CREATED_BY, –û–±–Ω–æ–≤–ª–µ–Ω–æ: $CREATED_AT)

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
4. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞
5. –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
6. –û–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞
7. –í—ã—Ö–æ–¥"
        
        read -p "–í–∞—à –≤—ã–±–æ—Ä: " choice
        case $choice in
            1)
                update_config
                ;;
            2)
                manage_container "start"
                ;;
            3)
                manage_container "restart"
                ;;
            4)
                manage_container "stop"
                ;;
            5)
                docker-compose logs --tail=100 -f
                ;;
            6)
                log "BLUE" "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞..."
                git pull
                docker-compose build --no-cache
                manage_container "restart"
                ;;
            7)
                log "GREEN" "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
                exit 0
                ;;
            *)
                log "RED" "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
                ;;
        esac
    done
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! check_docker; then
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
main_menu