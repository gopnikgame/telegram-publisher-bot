#!/bin/bash

# –í–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º
set -euo pipefail

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
REPO_URL="https://github.com/gopnikgame/telegram-publisher-bot.git"
BACKUP_DIR="./backups"
DOCKER_UID=$(id -u)
DOCKER_GID=$(id -g)
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
CREATED_BY="gopnikgame"
CREATED_AT="2025-02-24 19:32:08"
PROJECT_DIR="telegram-publisher-bot" # –ò–º—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø–æ—Å–ª–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    local level=$1
    local message=$2
    echo -e "${!level}${message}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
write_system_info() {
    local info_file="./logs/system_info.log"
    mkdir -p "$(dirname "$info_file")"

    {
        echo "=== System Information ==="
        echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        echo "User: $CREATED_BY"
        echo "Installation Date: $CREATED_AT"
        echo "Docker Version: $(docker --version)"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker compose plugin
        if command -v docker &> /dev/null && docker compose version &> /dev/null; then
            echo "Docker Compose Version: $(docker compose version)"
        else
            echo "Docker Compose Version: $(docker-compose --version 2>/dev/null || echo 'Not found')"
        fi
        echo "System: $(uname -a)"
        echo "========================="
    } > "$info_file"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–∞–Ω–¥—ã
check_command() {
    if ! command -v "$1" &> /dev/null; then
        log "RED" "‚ùå –û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ $1 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        log "YELLOW" "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:"
        log "YELLOW" "sudo apt-get update && sudo apt-get install -y $2"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

    local dependencies=(
        "git:git"
        "docker:docker.io"
        "docker-compose:docker-compose"
    )

    local missing_deps=()

    for dep in "${dependencies[@]}"; do
        IFS=":" read -r cmd pkg <<< "$dep"
        if ! command -v "$cmd" &> /dev/null; then
            missing_deps+=("$pkg")
        fi
    done

    if [ ${#missing_deps[@]} -ne 0 ]; then
        log "YELLOW" "‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
        log "BLUE" "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        sudo apt-get update
        sudo apt-get install -y "${missing_deps[@]}"
    fi

    log "GREEN" "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è backup/restore .env —Ñ–∞–π–ª–∞
backup_restore_env() {
    local action=$1  # "backup" –∏–ª–∏ "restore"
    local env_file=".env"
    local backup_file="$BACKUP_DIR/.env_$TIMESTAMP"

    if [ "$action" = "backup" ] && [ -f "$env_file" ]; then
        log "BLUE" "üìë –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ .env —Ñ–∞–π–ª–∞..."
        mkdir -p "$BACKUP_DIR"
        cp "$env_file" "$backup_file"
        log "GREEN" "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è .env —Å–æ–∑–¥–∞–Ω–∞: $backup_file"
    elif [ "$action" = "restore" ]; then
        if [ -f "$backup_file" ]; then
            log "BLUE" "üìë –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
            cp "$backup_file" "$env_file"
            log "GREEN" "‚úÖ .env —Ñ–∞–π–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑: $backup_file"
        elif [ -f "$BACKUP_DIR/.env_"* ]; then
            local latest_backup
            latest_backup=$(ls -t "$BACKUP_DIR/.env_"* | head -n1)
            log "YELLOW" "‚ö†Ô∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±—ç–∫–∞–ø–∞: $latest_backup"
            cp "$latest_backup" "$env_file"
            log "GREEN" "‚úÖ .env —Ñ–∞–π–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
setup_permissions() {
    log "BLUE" "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p "./logs"
    mkdir -p "$BACKUP_DIR"

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
    chmod -R 755 .
    chmod -R 777 "./logs"
    [ -f ".env" ] && chmod 600 ".env"

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞
    chown -R "${SUDO_USER:-$USER}:${SUDO_USER:-$USER}" .

    log "GREEN" "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π .env
manage_env_file() {
    local env_file=".env"
    local env_example=".env.example"
    local created=false

    log "BLUE" "üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π .env..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    if [ ! -f "$env_file" ]; then
        if [ -f "$env_example" ]; then
            cp "$env_example" "$env_file"
            created=true
            log "GREEN" "‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
        else
            log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env"
            cat > "$env_file" << EOL
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN=
ADMIN_IDS=
CHANNEL_ID=

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
DEFAULT_FORMAT=markdown
MAX_FILE_SIZE=20971520

# –°—Å—ã–ª–∫–∏
MAIN_BOT_NAME=–û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
MAIN_BOT_LINK=
SUPPORT_BOT_NAME=–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞
SUPPORT_BOT_LINK=
CHANNEL_NAME=–ö–∞–Ω–∞–ª –ø—Ä–æ–µ–∫—Ç–∞
CHANNEL_LINK=

# –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
TEST_MODE=false
TEST_CHAT_ID=

# –ü—Ä–æ–∫—Å–∏ (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
HTTPS_PROXY=
EOL
            created=true
            log "YELLOW" "‚ö†Ô∏è –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª"
        fi
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    local missing_params=()
    while IFS= read -r line; do
        if [[ $line =~ ^BOT_TOKEN=$ ]]; then
            missing_params+=("BOT_TOKEN")
        fi
        if [[ $line =~ ^ADMIN_IDS=$ ]]; then
            missing_params+=("ADMIN_IDS")
        fi
        if [[ $line =~ ^CHANNEL_ID=$ ]]; then
            missing_params+=("CHANNEL_ID")
        fi
    done < "$env_file"

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    if [ ${#missing_params[@]} -gt 0 ] || [ "$created" = true ]; then
        log "YELLOW" "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
        for param in "${missing_params[@]}"; do
            echo "   ‚Ä¢ $param"
        done

        read -r -p "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ–π—á–∞—Å? [Y/n] " response
        response=${response:-Y}
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            if command -v nano &> /dev/null; then
                nano "$env_file"
            else
                vi "$env_file"
            fi
        else
            log "RED" "‚ùå –ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
            return 1
        fi
    fi

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    chmod 600 "$env_file"
    chown "${SUDO_USER:-$USER}:${SUDO_USER:-$USER}" "$env_file"

    log "GREEN" "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è .env –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
force_remove_container() {
    local container_name="telegram-publisher-bot"
    log "YELLOW" "üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."

    local container_pid
    container_pid=$(docker inspect --format '{{.State.Pid}}' "$container_name" 2>/dev/null || echo "")

    docker stop "$container_name" &>/dev/null || true
    sleep 2

    if docker ps | grep -q "$container_name"; then
        log "YELLOW" "‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–∏–º–µ–Ω—è–µ–º SIGKILL..."
        if [ -n "$container_pid" ] && [ "$container_pid" != "0" ]; then
            sudo kill -TERM "$container_pid" &>/dev/null || true
            sleep 2
        fi
        docker kill "$container_name" &>/dev/null || true
    fi

    docker rm -f "$container_name" &>/dev/null || true

    if ! docker ps -a | grep -q "$container_name"; then
        log "GREEN" "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"
    else
        log "RED" "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–∑–æ–≤–∞ docker compose
docker_compose_cmd() {
    if command -v docker &> /dev/null && docker compose version &> /dev/null; then
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É docker compose
        docker compose "$@"
    else
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π docker-compose
        docker-compose "$@"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
manage_container() {
    local action=$1
    log "BLUE" "üê≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º..."

    export DOCKER_UID DOCKER_GID
    export CREATED_BY="gopnikgame"
    export CREATED_AT="2025-02-24 19:33:35"

    case $action in
        "restart")
            log "BLUE" "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            docker_compose_cmd down --remove-orphans || force_remove_container
            docker_compose_cmd up -d
            ;;
        "stop")
            log "BLUE" "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            docker_compose_cmd down --remove-orphans || force_remove_container
            ;;
        "start")
            log "BLUE" "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            if docker ps -a | grep -q "telegram-publisher-bot"; then
                force_remove_container
            fi
            docker_compose_cmd up -d
            ;;
    esac

    if [ "$action" = "start" ] || [ "$action" = "restart" ]; then
        log "BLUE" "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞..."
        sleep 5

        if ! docker ps | grep -q "telegram-publisher-bot"; then
            log "RED" "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
            docker_compose_cmd logs
            return 1
        fi

        log "GREEN" "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
        docker_compose_cmd logs --tail=10
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
check_bot_status() {
    log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞..."

    if docker ps | grep -q "telegram-publisher-bot"; then
        log "GREEN" "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"
        docker_compose_cmd logs --tail=10
    else
        log "RED" "‚ùå –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        docker_compose_cmd logs --tail=20
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤ –∏ –±—ç–∫–∞–ø–æ–≤
cleanup_old_files() {
    log "BLUE" "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤..."

    if [ -d "$BACKUP_DIR" ]; then
        cd "$BACKUP_DIR"
        ls -t .env_* 2>/dev/null | tail -n +6 | xargs -r rm
        cd ..
    fi

    find "./logs" -name "*.log.*" -mtime +7 -delete 2>/dev/null || true

    docker system prune -f --volumes >/dev/null 2>&1 || true

    log "GREEN" "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker
check_docker() {
    log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."

    if ! docker info >/dev/null 2>&1; then
        log "YELLOW" "‚ö†Ô∏è Docker –¥–µ–º–æ–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        if systemctl is-active docker >/dev/null 2>&1; then
            log "BLUE" "üîÑ –ó–∞–ø—É—Å–∫ Docker –¥–µ–º–æ–Ω–∞..."
            sudo systemctl start docker
            sleep 3
        else
            log "RED" "‚ùå Docker ÔøΩÔøΩ–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            return 1
        fi
    fi

    if ! docker ps >/dev/null 2>&1; then
        log "YELLOW" "‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Docker"
        if ! groups | grep -q docker; then
            log "BLUE" "üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker..."
            sudo usermod -aG docker "${SUDO_USER:-$USER}"
            log "YELLOW" "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É"
            return 1
        fi
    fi

    log "GREEN" "‚úÖ Docker –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
setup_repository() {
    log "BLUE" "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."

    if ! command -v git &>/dev/null; then
        log "RED" "‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 1
    fi

    if [ -z "$(git config --global user.name)" ]; then
        git config --global user.name "Telegram Publisher Bot"
    fi
    if [ -z "$(git config --global user.email)" ]; then
        git config --global user.email "bot@localhost"
    fi

    if [ ! -f ".gitignore" ]; then
        cat > ".gitignore" << EOL
.env
logs/
backups/
__pycache__/
*.pyc
.DS_Store
EOL
        log "GREEN" "‚úÖ –°–æ–∑–¥–∞–Ω .gitignore —Ñ–∞–π–ª"
    fi

    log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
update_repo() {
    log "BLUE" "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."

    backup_restore_env "backup"

    if [ -d ".git" ]; then
        git fetch
        git reset --hard origin/main
        log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω"
    else
        git clone "$REPO_URL" .
        log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
    fi

    backup_restore_env "restore"
}

# –§—É–Ω–∫—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu() {
    while true; do
        echo -e "\nüì± Telegram Publisher Bot - –ú–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏\n"
        echo "1. üìù –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª"
        echo "2. üöÄ –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
        echo "3. üìä –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (–≤—Å–µ)"
        echo "4. ‚ùå –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –æ—à–∏–±–æ–∫"
        echo "5. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
        echo "6. ‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
        echo "7. üìà –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
        echo "8. ‚¨ÜÔ∏è –û–±–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
        echo "9. üßπ –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ –∏ –±—ç–∫–∞–ø—ã"
        echo "10. üö™ –í—ã–π—Ç–∏"

        read -r -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-10): " choice

        case $choice in
            1)
                manage_env_file
                ;;
            2)
                log "BLUE" "üöÄ –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
                update_repo
                if ! manage_env_file; then
                    log "RED" "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
                    continue
                fi
                setup_permissions
                manage_container "start"
                check_bot_status
                ;;
            3)
                log "BLUE" "üìú –ü–æ–∫–∞–∑ –≤—Å–µ—Ö –ª–æ–≥–æ–≤ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
                tail -f "./logs/bot.log"
                ;;
            4)
                log "BLUE" "‚ùå –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
                tail -f "./logs/error.log"
                ;;
            5)
                manage_container "restart"
                check_bot_status
                ;;
            6)
                manage_container "stop"
                log "GREEN" "‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
                ;;
            7)
                check_bot_status
                ;;
            8)
                update_repo
                setup_permissions
                log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω!"
                read -r -p "–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞? [y/N] " response
                if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
                    manage_container "restart"
                    check_bot_status
                fi
                ;;
            9)
                cleanup_old_files
                ;;
            10)
                log "GREEN" "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
                exit 0
                ;;
            *)
                log "RED" "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
                ;;
        esac
    done
}


# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root
if [ "$EUID" -ne 0 ]; then
    log "RED" "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root (sudo)"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
install_dependencies

# –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -d "./.git" ]; then
    log "BLUE" "‚¨áÔ∏è –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    git clone "$REPO_URL" .
else
    log "BLUE" "üîÑ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
    update_repo
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
if [ ! -f "docker-compose.yml" ] && [ ! -f ".env.example" ]; then
    log "RED" "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ (docker-compose.yml –∏–ª–∏ .env.example)"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if ! check_docker; then
    log "RED" "‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Docker"
    exit 1
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if ! setup_repository; then
    log "RED" "‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    exit 1
fi

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
write_system_info

# –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu
