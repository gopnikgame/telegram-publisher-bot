#!/bin/bash

# –í–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º
set -euo pipefail

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
REPO_URL="https://github.com/gopnikgame/telegram-publisher-bot.git"
TARGET_DIR="/opt/telegram-publisher-bot"
BACKUP_DIR="/opt/telegram-publisher-bot-backup"
DOCKER_UID=$(id -u)
DOCKER_GID=$(id -g)
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
CREATED_BY="gopnikgame"
CREATED_AT="2025-02-24 11:47:18"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    local level=$1
    local message=$2
    echo -e "${!level}${message}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
write_system_info() {
    local info_file="$TARGET_DIR/logs/system_info.log"
    mkdir -p "$(dirname "$info_file")"
    
    {
        echo "=== System Information ==="
        echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        echo "User: $CREATED_BY"
        echo "Installation Date: $CREATED_AT"
        echo "Docker Version: $(docker --version)"
        echo "Docker Compose Version: $(docker-compose --version)"
        echo "System: $(uname -a)"
        echo "========================="
    } > "$info_file"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–∞–Ω–¥—ã
check_command() {
    if ! command -v "$1" &> /dev/null; then
        log "RED" "‚ùå –û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ $1 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        log "YELLOW" "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:"
        log "YELLOW" "sudo apt-get update && sudo apt-get install -y $2"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    log "BLUE" "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    local dependencies=(
        "git:git"
        "docker:docker.io"
        "docker-compose:docker-compose"
    )
    
    local missing_deps=()
    
    for dep in "${dependencies[@]}"; do
        IFS=":" read -r cmd pkg <<< "$dep"
        if ! command -v "$cmd" &> /dev/null; then
            missing_deps+=("$pkg")
        fi
    done
    
    if [ ${#missing_deps[@]} -ne 0 ]; then
        log "YELLOW" "‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
        log "BLUE" "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        sudo apt-get update
        sudo apt-get install -y "${missing_deps[@]}"
    fi
    
    log "GREEN" "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è backup/restore .env —Ñ–∞–π–ª–∞
backup_restore_env() {
    local action=$1  # "backup" –∏–ª–∏ "restore"
    local env_file="$TARGET_DIR/.env"
    local backup_file="$BACKUP_DIR/.env_$TIMESTAMP"
    
    if [ "$action" = "backup" ] && [ -f "$env_file" ]; then
        log "BLUE" "üìë –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ .env —Ñ–∞–π–ª–∞..."
        mkdir -p "$BACKUP_DIR"
        cp "$env_file" "$backup_file"
        log "GREEN" "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è .env —Å–æ–∑–¥–∞–Ω–∞: $backup_file"
    elif [ "$action" = "restore" ]; then
        if [ -f "$backup_file" ]; then
            log "BLUE" "üìë –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
            cp "$backup_file" "$env_file"
            log "GREEN" "‚úÖ .env —Ñ–∞–π–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑: $backup_file"
        elif [ -f "$BACKUP_DIR/.env_"* ]; then
            # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ—á–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞, –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π
            local latest_backup=$(ls -t "$BACKUP_DIR/.env_"* | head -n1)
            log "YELLOW" "‚ö†Ô∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±—ç–∫–∞–ø–∞: $latest_backup"
            cp "$latest_backup" "$env_file"
            log "GREEN" "‚úÖ .env —Ñ–∞–π–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
setup_permissions() {
    local target_dir="$1"
    log "BLUE" "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p "$target_dir/logs"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
    chmod -R 755 "$target_dir"
    chmod -R 777 "$target_dir/logs"
    [ -f "$target_dir/.env" ] && chmod 600 "$target_dir/.env"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞
    chown -R "${SUDO_USER:-$USER}:${SUDO_USER:-$USER}" "$target_dir"
    
    log "GREEN" "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞
manage_env_file() {
    local env_file="$TARGET_DIR/.env"
    local env_example="$TARGET_DIR/.env.example"
    local created=false
    
    log "BLUE" "üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π .env..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    if [ ! -f "$env_file" ]; then
        if [ -f "$env_example" ]; then
            cp "$env_example" "$env_file"
            created=true
            log "GREEN" "‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
        else
            log "RED" "‚ùå –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω"
            # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª
            cat > "$env_file" << EOL
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN=
ADMIN_IDS=
CHANNEL_ID=

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
DEFAULT_FORMAT=markdown
MAX_FILE_SIZE=20971520

# –°—Å—ã–ª–∫–∏
MAIN_BOT_NAME=–û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
MAIN_BOT_LINK=
SUPPORT_BOT_NAME=–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞
SUPPORT_BOT_LINK=
CHANNEL_NAME=–ö–∞–Ω–∞–ª –ø—Ä–æ–µ–∫—Ç–∞
CHANNEL_LINK=

# –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
TEST_MODE=false
TEST_CHAT_ID=

# –ü—Ä–æ–∫—Å–∏ (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
HTTPS_PROXY=
EOL
            created=true
            log "YELLOW" "‚ö†Ô∏è –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª"
        fi
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    local missing_params=()
    while IFS= read -r line; do
        if [[ $line =~ ^BOT_TOKEN=$ ]]; then
            missing_params+=("BOT_TOKEN")
        fi
        if [[ $line =~ ^ADMIN_IDS=$ ]]; then
            missing_params+=("ADMIN_IDS")
        fi
        if [[ $line =~ ^CHANNEL_ID=$ ]]; then
            missing_params+=("CHANNEL_ID")
        fi
    done < "$env_file"

    # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–ª–∏ —Ñ–∞–π–ª —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω
    if [ ${#missing_params[@]} -gt 0 ] || [ "$created" = true ]; then
        log "YELLOW" "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
        for param in "${missing_params[@]}"; do
            echo "   ‚Ä¢ $param"
        done
        
        read -r -p "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ–π—á–∞—Å? [Y/n] " response
        response=${response:-Y}
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            if command -v nano &> /dev/null; then
                nano "$env_file"
            else
                vi "$env_file"
            fi
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            local still_missing=false
            while IFS= read -r line; do
                if [[ $line =~ ^(BOT_TOKEN|ADMIN_IDS|CHANNEL_ID)=$ ]]; then
                    still_missing=true
                    break
                fi
            done < "$env_file"
            
            if [ "$still_missing" = true ]; then
                log "RED" "‚ùå –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
                log "YELLOW" "‚ö†Ô∏è –ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
                return 1
            fi
        else
            log "RED" "‚ùå –ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
            return 1
        fi
    else
        # –ï—Å–ª–∏ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø–æ–ª–Ω–µ–Ω—ã, —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        read -r -p "–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏? [y/N] " response
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            if command -v nano &> /dev/null; then
                nano "$env_file"
            else
                vi "$env_file"
            fi
        fi
    fi

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    chmod 600 "$env_file"
    chown "${SUDO_USER:-$USER}:${SUDO_USER:-$USER}" "$env_file"
    
    log "GREEN" "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è .env –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
force_remove_container() {
    local container_name="telegram-publisher-bot"
    log "YELLOW" "üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    
    # –ü–æ–ª—É—á–∞–µ–º PID –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    local container_pid=$(docker inspect --format '{{.State.Pid}}' "$container_name" 2>/dev/null || echo "")
    
    # –ü—Ä–æ–±—É–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º—è–≥–∫–æ
    docker stop "$container_name" &>/dev/null || true
    sleep 2
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    if docker ps | grep -q "$container_name"; then
        log "YELLOW" "‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–∏–º–µ–Ω—è–µ–º SIGKILL..."
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å SIGTERM –Ω–∞–ø—Ä—è–º—É—é –ø—Ä–æ—Ü–µ—Å—Å—É
        if [ -n "$container_pid" ] && [ "$container_pid" != "0" ]; then
            sudo kill -TERM "$container_pid" &>/dev/null || true
            sleep 2
        fi
        docker kill "$container_name" &>/dev/null || true
        sleep 2
    fi
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
    docker rm -f "$container_name" &>/dev/null || true
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –µ—â–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    if docker ps -a | grep -q "$container_name"; then
        log "RED" "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
        log "YELLOW" "‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –æ—á–∏—Å—Ç–∫–∏ Docker..."
        
        # –û—á–∏—Å—Ç–∫–∞ Docker —Å–∏—Å—Ç–µ–º—ã
        docker system prune -f &>/dev/null || true
        
        # –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        if docker rm -f "$container_name" &>/dev/null; then
            log "GREEN" "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"
        else
            log "RED" "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
            log "YELLOW" "‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∏—Å—Ç–µ–º—É"
            return 1
        fi
    else
        log "GREEN" "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
manage_container() {
    local action=$1
    log "BLUE" "üê≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º..."
    
    cd "$TARGET_DIR"
    
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    export DOCKER_UID DOCKER_GID
    export CREATED_BY="gopnikgame"
    export CREATED_AT="2025-02-24 11:57:51"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º/–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
    if [ "$action" = "start" ] || [ "$action" = "restart" ]; then
        if [ ! -f "$TARGET_DIR/.env" ]; then
            log "RED" "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
            log "YELLOW" "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–ø—É–Ω–∫—Ç 1 –≤ –º–µ–Ω—é)"
            return 1
        fi
        
        if ! grep -q "^BOT_TOKEN=.\\+" "$TARGET_DIR/.env"; then
            log "RED" "‚ùå BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
            log "YELLOW" "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–ø—É–Ω–∫—Ç 1 –≤ –º–µ–Ω—é)"
            return 1
        fi
        
        if ! grep -q "^ADMIN_IDS=.\\+" "$TARGET_DIR/.env"; then
            log "RED" "‚ùå ADMIN_IDS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
            log "YELLOW" "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–ø—É–Ω–∫—Ç 1 –≤ –º–µ–Ω—é)"
            return 1
        fi
        
        if ! grep -q "^CHANNEL_ID=.\\+" "$TARGET_DIR/.env"; then
            log "RED" "‚ùå CHANNEL_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
            log "YELLOW" "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–ø—É–Ω–∫—Ç 1 –≤ –º–µ–Ω—é)"
            return 1
        fi
    fi
    
    case $action in
        "restart")
            log "BLUE" "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            docker-compose down --remove-orphans --timeout 30 || force_remove_container
            sleep 2
            docker-compose up -d
            ;;
        "stop")
            log "BLUE" "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            docker-compose down --remove-orphans --timeout 30 || force_remove_container
            ;;
        "start")
            log "BLUE" "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            if docker ps -a | grep -q "telegram-publisher-bot"; then
                force_remove_container
            fi
            docker-compose up -d
            ;;
    esac
    
    local exit_code=$?
    if [ $exit_code -eq 0 ]; then
        log "GREEN" "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
        
        # –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–ø—É—Å–∫ –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        if [ "$action" = "start" ] || [ "$action" = "restart" ]; then
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º healthcheck
            local max_attempts=6
            local attempt=1
            local container_healthy=false
            
            while [ $attempt -le $max_attempts ]; do
                log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–ø–æ–ø—ã—Ç–∫–∞ $attempt –∏–∑ $max_attempts)..."
                sleep 5
                
                if ! docker ps | grep -q "telegram-publisher-bot"; then
                    log "RED" "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
                    return 1
                fi
                
                local health_status=$(docker inspect --format='{{.State.Health.Status}}' telegram-publisher-bot 2>/dev/null || echo "unknown")
                
                case $health_status in
                    "healthy")
                        log "GREEN" "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
                        container_healthy=true
                        break
                        ;;
                    "starting")
                        log "YELLOW" "‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è..."
                        ;;
                    "unhealthy")
                        log "RED" "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ –Ω–µ—Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏"
                        docker-compose logs --tail=20
                        return 1
                        ;;
                    *)
                        log "YELLOW" "‚ö†Ô∏è –°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–∫–∏: $health_status"
                        ;;
                esac
                
                attempt=$((attempt + 1))
            done
            
            if [ "$container_healthy" = false ]; then
                log "YELLOW" "‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω, –Ω–æ healthcheck –Ω–µ –ø—Ä–æ–π–¥–µ–Ω"
                log "YELLOW" "‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π:"
                docker-compose logs --tail=20
            fi
        fi
    else
        log "RED" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–∫–æ–¥: $exit_code)"
        docker-compose logs --tail=20
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
check_bot_status() {
    log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞..."
    
    cd "$TARGET_DIR"
    
    if docker ps | grep -q "telegram-publisher-bot"; then
        local health_status=$(docker inspect --format='{{.State.Health.Status}}' telegram-publisher-bot 2>/dev/null || echo "unknown")
        log "GREEN" "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (—Å—Ç–∞—Ç—É—Å: $health_status)"
        docker-compose logs --tail=10
    else
        log "RED" "‚ùå –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        log "YELLOW" "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π:"
        docker-compose logs --tail=20
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤ –∏ –±—ç–∫–∞–ø–æ–≤
cleanup_old_files() {
    log "BLUE" "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5)
    if [ -d "$BACKUP_DIR" ]; then
        cd "$BACKUP_DIR"
        ls -t .env_* 2>/dev/null | tail -n +6 | xargs -r rm
    fi
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏
    find "$TARGET_DIR/logs" -name "*.log.*" -mtime +7 -delete 2>/dev/null || true
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ Docker –ª–æ–≥–∏
    docker system prune -f --volumes >/dev/null 2>&1 || true
    
    log "GREEN" "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
update_repo() {
    log "BLUE" "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø .env –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
    backup_restore_env "backup"
    
    if [ -d "$TARGET_DIR/.git" ]; then
        cd "$TARGET_DIR"
        git fetch
        git reset --hard origin/main
        log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω"
    else
        git clone "$REPO_URL" "$TARGET_DIR"
        log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
    fi
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º .env –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    backup_restore_env "restore"
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç
log "GREEN" "ü§ñ –£—Å—Ç–∞–Ω–æ–≤–∫–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Telegram Publisher Bot"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º root –ø—Ä–∞–≤–∞
if [ "$EUID" -ne 0 ]; then 
    log "RED" "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root (sudo)"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
install_dependencies

# –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
mkdir -p "$TARGET_DIR"

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
write_system_info

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
while true; do
    echo -e "\nüì± Telegram Publisher Bot - –ú–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏\n"
    echo "1. üìù –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª"
    echo "2. üöÄ –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "3. üìä –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (–≤—Å–µ)"
    echo "4. ‚ùå –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –æ—à–∏–±–æ–∫"
    echo "5. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "6. ‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
    echo "7. üìà –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
    echo "8. ‚¨ÜÔ∏è –û–±–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    echo "9. üßπ –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ –∏ –±—ç–∫–∞–ø—ã"
    echo "10. üö™ –í—ã–π—Ç–∏"
    
    read -r -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-10): " choice
    
    case $choice in
        1)
            manage_env_file
            ;;
        2)
            log "BLUE" "üöÄ –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
            update_repo
            if ! manage_env_file; then
                log "RED" "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
                continue
            fi
            setup_permissions "$TARGET_DIR"
            manage_container "start"
            check_bot_status
            ;;
        3)
            log "BLUE" "üìú –ü–æ–∫–∞–∑ –≤—Å–µ—Ö –ª–æ–≥–æ–≤ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
            tail -f "$TARGET_DIR/logs/bot.log"
            ;;
        4)
            log "BLUE" "‚ùå –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
            tail -f "$TARGET_DIR/logs/error.log"
            ;;
        5)
            cd "$TARGET_DIR"
            manage_container "restart"
            check_bot_status
            ;;
        6)
            cd "$TARGET_DIR"
            manage_container "stop"
            log "GREEN" "‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
            ;;
        7)
            check_bot_status
            ;;
        8)
            update_repo
            setup_permissions "$TARGET_DIR"
            log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω!"
            read -r -p "–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞? [y/N] " response
            if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
                manage_container "restart"
                check_bot_status
            fi
            ;;
        9)
            cleanup_old_files
            ;;
        10)
            log "GREEN" "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
            exit 0
            ;;
        *)
            log "RED" "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            ;;
    esac
done