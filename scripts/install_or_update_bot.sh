#!/bin/bash

# –í–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º
set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[0;37m'
NC='\033[0m' # No Color

# –§–∞–π–ª—ã –ª–æ–≥–æ–≤
BOT_LOG_FILE="logs/bot.log"
ERROR_LOG_FILE="logs/error.log"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    local level=$1
    local message=$2
    echo -e "${!level}${message}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ docker-compose
docker_compose_cmd() {
    if command -v docker-compose &> /dev/null; then
        docker-compose "$@"
    else
        docker compose "$@"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è .env —Ñ–∞–π–ª–æ–º
manage_env_file() {
    local env_file=".env"
    local env_example=".env.example"
    local created=false

    log "BLUE" "üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π .env..."

    # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    log "BLUE" "üìç –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    if [ ! -f "$env_file" ]; then
        if [ -f "$env_example" ]; then
            cp "$env_example" "$env_file"
            created=true
            log "GREEN" "‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
        else
            log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env"
            cat > "$env_file" << EOL
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN=
ADMIN_IDS=
CHANNEL_ID=
BOT_NAME=telegram-publisher-bot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
DEFAULT_FORMAT=markdown
MAX_FILE_SIZE=20971520

# –°—Å—ã–ª–∫–∏
MAIN_BOT_NAME=Bot_VPNLine
MAIN_BOT_LINK=
SUPPORT_BOT_NAME=SUPPORT
SUPPORT_BOT_LINK=
CHANNEL_NAME=PUBLIC
CHANNEL_LINK=

# –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
TEST_MODE=false
TEST_CHAT_ID=

# –ü—Ä–æ–∫—Å–∏ (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
HTTPS_PROXY=
EOL
            created=true
            log "YELLOW" "‚ö†Ô∏è –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª"
        fi
    fi

    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª
    read -r -p "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª —Å–µ–π—á–∞—Å? [Y/n] " response
    response=${response:-Y}
    if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
        # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        if command -v nano &> /dev/null; then
            log "BLUE" "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º nano..."
            nano "$env_file"
            editor_result=$?
        else
            log "BLUE" "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º vi..."
            vi "$env_file"
            editor_result=$?
        fi

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        if [ "$editor_result" -ne 0 ]; then
            log "RED" "‚ùå –†–µ–¥–∞–∫—Ç–æ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥ –æ—à–∏–±–∫–∏: $editor_result"
            log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞."
            return 1
        fi
    else
        log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞."
        return 1
    fi

    log "GREEN" "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è .env –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
update_repo() {
    log "BLUE" "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π STASHED
    STASHED="false"

    # Stash local changes to .env
    if git diff --quiet HEAD -- .env; then
        log "BLUE" "No local changes to .env"
    else
        log "BLUE" "Stashing local changes to .env"
        git stash push -u .env
        STASHED="true"
    fi

    git fetch
    git reset --hard origin/main
    log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω"

     # Restore stashed changes to .env
    if [[ "$STASHED" == "true" ]]; then
        log "BLUE" "Restoring stashed changes to .env"
        git stash pop
    fi
    log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
manage_container() {
    local action=$1

    log "BLUE" "üê≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º..."

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
    if [ -f ".env" ]; then
        log "BLUE" "üîë –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env"
        # –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8 –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ .env
        export $(grep -v '^#' .env | xargs -0)
    else
        log "RED" "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è."
        return 1
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è BOT_NAME
    if [ -z "$BOT_NAME" ]; then
        log "RED" "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è BOT_NAME –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–µ –≤ —Ñ–∞–π–ª–µ .env"
        return 1
    fi

    # –í—ã–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π BOT_NAME
    log "BLUE" "üîç BOT_NAME: $BOT_NAME"

    export DOCKER_UID DOCKER_GID
    export CREATED_BY="$CURRENT_USER"
    export CREATED_AT="$CURRENT_TIME"

    case $action in
        "restart")
            log "BLUE" "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            docker_compose_cmd -f docker/docker-compose.yml down --remove-orphans || force_remove_container
            docker_compose_cmd -f docker/docker-compose.yml up -d
            ;;
        "stop")
            log "BLUE" "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            docker_compose_cmd -f docker/docker-compose.yml down --remove-orphans || force_remove_container
            ;;
        "start")
            log "BLUE" "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            if docker ps -a | grep -q "$BOT_NAME"; then
                force_remove_container
            fi
            docker_compose_cmd -f docker/docker-compose.yml up -d
            ;;
    esac

    if [ "$action" = "start" ] || [ "$action" = "restart" ]; then
        log "BLUE" "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞..."
        sleep 5

        if ! docker ps | grep -q "$BOT_NAME"; then
            log "RED" "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
            docker_compose_cmd -f docker/docker-compose.yml logs
            return 1
        fi

        log "GREEN" "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
        docker_compose_cmd -f docker/docker-compose.yml logs --tail=10
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
force_remove_container() {
    if docker ps -a | grep -q "$BOT_NAME"; then
        log "YELLOW" "‚ö†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
        docker stop "$BOT_NAME"
        docker rm "$BOT_NAME"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
cleanup() {
    log "BLUE" "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    rm -rf /tmp/tmp.*
}

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD HH:MM:SS (UTC)
CURRENT_TIME=$(date -u +%Y-%m-%d\ %H:%M:%S)

# –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏–Ω —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CURRENT_USER=$(whoami)

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        log "CYAN" "ü§ñ Telegram Publisher Bot"
        log "CYAN" "========================"
        log "GREEN" "1. ‚¨ÜÔ∏è –û–±–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
        log "YELLOW" "2. üìù –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª"
        log "GREEN" "3. üöÄ –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–æ—Ç–∞"
        log "RED" "4. ‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–æ—Ç–∞"
        log "MAGENTA" "5. üìä –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (–≤—Å–µ)"
        log "RED" "6. ‚ùå –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –æ—à–∏–±–æ–∫"
        log "GREEN" "7. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
        log "YELLOW" "8. üßπ –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ –∏ –±—ç–∫–∞–ø—ã"
        log "BLUE" "0. üö™ –í—ã–π—Ç–∏"

        read -r -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-8): " choice

        case "$choice" in
            1)
                update_repo
                ;;
            2)
                manage_env_file
                ;;
            3)
                manage_container "start"
                ;;
            4)
                manage_container "stop"
                force_remove_container
                ;;
            5)
                # –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (–≤—Å–µ)
                log "MAGENTA" "üìä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ª–æ–≥–∏ –±–æ—Ç–∞..."
                if [ -f "$BOT_LOG_FILE" ]; then
                    cat "$BOT_LOG_FILE"
                else
                    log "RED" "‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: $BOT_LOG_FILE"
                fi
                ;;
            6)
                # –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –æ—à–∏–±–æ–∫
                log "RED" "‚ùå –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞..."
                if [ -f "$ERROR_LOG_FILE" ]; then
                    cat "$ERROR_LOG_FILE"
                else
                    log "RED" "‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω: $ERROR_LOG_FILE"
                fi
                ;;
            7)
                manage_container "restart"
                ;;
            8)
                # TODO: Implement cleanup old logs and backups
                log "YELLOW" "‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤ –∏ –±—ç–∫–∞–ø–æ–≤ –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞."
                ;;
            0)
                log "BLUE" "üö™ –í—ã—Ö–æ–¥..."
                break
                ;;
            *)
                log "RED" "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç 0 –¥–æ 8."
                ;;
        esac
    done
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
main_menu

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
cleanup