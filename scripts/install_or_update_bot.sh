#!/bin/bash

# –í–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º
set -euo pipefail

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
REPO_URL="https://github.com/gopnikgame/telegram-publisher-bot.git"
PROJECT_DIR="telegram-publisher-bot"
INSTALL_DIR="/opt/$PROJECT_DIR" # –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
BACKUP_DIR="./backups"
LOG_DIR="./logs"
#BOT_NAME="telegram-publisher-bot" # –¢–µ–ø–µ—Ä—å BOT_NAME —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ .env
CURRENT_USER="${SUDO_USER:-$USER}"
CURRENT_TIME="2025-02-25 12:05:32" # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ UTC

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    local level=$1
    local message=$2
    echo -e "${!level}${message}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    log "BLUE" "üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."

    mkdir -p "$BACKUP_DIR"
    mkdir -p "$LOG_DIR"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞
backup_restore_env() {
    local action=$1

    case $action in
        "backup")
            log "BLUE" "üìë –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ .env —Ñ–∞–π–ª–∞..."
            if [ -f ".env" ]; then
                cp ".env" "$BACKUP_DIR/.env_$(date +%Y%m%d_%H%M%S)"
                log "GREEN" "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è .env —Å–æ–∑–¥–∞–Ω–∞: $BACKUP_DIR/.env_$(date +%Y%m%d_%H%M%S)"
            else
                log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"
            fi
            ;;
        "restore")
            log "BLUE" "üìë –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
            if [ -f "$BACKUP_DIR/.env_$(date +%Y%m%d_%H%M%S)" ]; then
                cp "$BACKUP_DIR/.env_$(date +%Y%m%d_%H%M%S)" ".env"
                log "GREEN" "‚úÖ .env —Ñ–∞–π–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑: $BACKUP_DIR/.env_$(date +%Y%m%d_%H%M%S)"
            else
                log "YELLOW" "‚ö†Ô∏è –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è .env –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
            fi
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
update_repo() {
    log "BLUE" "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."

    # Stash local changes to .env
    if git diff --quiet HEAD -- .env; then
        log "BLUE" "No local changes to .env"
    else
        log "BLUE" "Stashing local changes to .env"
        git stash push -u .env
        STASHED="true"
    fi

    git fetch
    git reset --hard origin/main
    log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω"

     # Restore stashed changes to .env
    if [[ "$STASHED" == "true" ]]; then
        log "BLUE" "Restoring stashed changes to .env"
        git stash pop
    fi
    log "GREEN" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π .env
manage_env_file() {
    local env_file=".env"
    local env_example=".env.example"
    local created=false

    log "BLUE" "üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π .env..."

    # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    log "BLUE" "üìç –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    if [ ! -f "$env_file" ]; then
        if [ -f "$env_example" ]; then
            cp "$env_example" "$env_file"
            created=true
            log "GREEN" "‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
        else
            log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env"
            cat > "$env_file" << EOL
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN=
ADMIN_IDS=
CHANNEL_ID=
BOT_NAME=telegram-publisher-bot # –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è BOT_NAME

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
DEFAULT_FORMAT=markdown
MAX_FILE_SIZE=20971520

# –°—Å—ã–ª–∫–∏
MAIN_BOT_NAME=–û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
MAIN_BOT_LINK=
SUPPORT_BOT_NAME=–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞
SUPPORT_BOT_LINK=
CHANNEL_NAME=–ö–∞–Ω–∞–ª –ø—Ä–æ–µ–∫—Ç–∞
CHANNEL_LINK=

# –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
TEST_MODE=false
TEST_CHAT_ID=

# –ü—Ä–æ–∫—Å–∏ (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
HTTPS_PROXY=
EOL
            created=true
            log "YELLOW" "‚ö†Ô∏è –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª"
        fi
    fi

    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª
    read -r -p "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª —Å–µ–π—á–∞—Å? [Y/n] " response
    response=${response:-Y}
    if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
        if command -v nano &> /dev/null; then
            nano "$env_file"
        else
            vi "$env_file"
        fi
    else
        log "YELLOW" "‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞."
        return 1
    fi

    log "GREEN" "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è .env –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
manage_container() {
    local action=$1
    log "BLUE" "üê≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è BOT_NAME
    if [ -z "$BOT_NAME" ]; then
        log "RED" "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è BOT_NAME –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–µ –≤ —Ñ–∞–π–ª–µ .env"
        return 1
    fi

    # –í—ã–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π BOT_NAME
    log "BLUE" "üîç BOT_NAME: $BOT_NAME"

    export DOCKER_UID DOCKER_GID
    export CREATED_BY="$CURRENT_USER"
    export CREATED_AT="$CURRENT_TIME"

    case $action in
        "restart")
            log "BLUE" "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            docker_compose_cmd -f docker/docker-compose.yml down --remove-orphans || force_remove_container
            docker_compose_cmd -f docker/docker-compose.yml up -d
            ;;
        "stop")
            log "BLUE" "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            docker_compose_cmd -f docker/docker-compose.yml down --remove-orphans || force_remove_container
            ;;
        "start")
            log "BLUE" "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            if docker ps -a | grep -q "$BOT_NAME"; then
                force_remove_container
            fi
            docker_compose_cmd -f docker/docker-compose.yml up -d
            ;;
    esac

    if [ "$action" = "start" ] || [ "$action" = "restart" ]; then
        log "BLUE" "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞..."
        sleep 5

        if ! docker ps | grep -q "$BOT_NAME"; then
            log "RED" "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
            docker_compose_cmd -f docker/docker-compose.yml logs
            return 1
        fi

        log "GREEN" "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
        docker_compose_cmd -f docker/docker-compose.yml logs --tail=10
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
check_bot_status() {
    log "BLUE" "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è BOT_NAME
    if [ -z "$BOT_NAME" ]; then
        log "RED" "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è BOT_NAME –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–µ –≤ —Ñ–∞–π–ª–µ .env"
        return 1
    fi

    # –í—ã–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π BOT_NAME
    log "BLUE" "üîç BOT_NAME: $BOT_NAME"

    if docker ps | grep -q "$BOT_NAME"; then
        log "GREEN" "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"
        docker_compose_cmd -f docker/docker-compose.yml logs --tail=10
    else
        log "RED" "‚ùå –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        docker_compose_cmd -f docker/docker-compose.yml logs --tail=20
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫
show_error_logs() {
    log "BLUE" "‚ùå –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –æ—à–∏–±–æ–∫..."
    docker_compose_cmd -f docker/docker-compose.yml logs 2>&1 | grep -i "ERROR"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤ –∏ –±—ç–∫–∞–ø–æ–≤
cleanup_old_files() {
    log "BLUE" "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤..."

    if [ -d "$BACKUP_DIR" ]; then
        cd "$BACKUP_DIR"
        ls -t .env_* 2>/dev/null | tail -n +6 | xargs -r rm
        cd ..
    fi

    find "$LOG_DIR" -name "*.log.*" -mtime +7 -delete 2>/dev/null || true

    docker system prune -f --volumes >/dev/null 2>&1 || true

    log "GREEN" "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
force_remove_container() {
    log "YELLOW" "‚ö†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    docker rm -f "$BOT_NAME" >/dev/null 2>&1 || true
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –º–µ–Ω—é
show_menu() {
    echo "
ü§ñ Telegram Publisher Bot
========================
1. ‚¨ÜÔ∏è –û–±–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
2. üìù –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª
3. üöÄ –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–æ—Ç–∞
4. ‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–æ—Ç–∞
5. üìä –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (–≤—Å–µ)
6. ‚ùå –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –æ—à–∏–±–æ–∫
7. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
8. üßπ –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ –∏ –±—ç–∫–∞–ø—ã
0. üö™ –í—ã–π—Ç–∏
"
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while true; do
    show_menu
    read -r -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-8): " choice

    case "$choice" in
        1)
            update_repo
            ;;
        2)
            manage_env_file
            ;;
        3)
            manage_container "start"
            ;;
        4)
            manage_container "stop"
            ;;
        5)
            check_bot_status
            ;;
        6)
            show_error_logs
            ;;
        7)
            manage_container "restart"
            ;;
        8)
            cleanup_old_files
            ;;
        0)
            log "BLUE" "üö™ –í—ã—Ö–æ–¥..."
            exit 0
            ;;
        *)
            log "RED" "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
            ;;
    esac
done