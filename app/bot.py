import logging
from datetime import datetime
from functools import wraps
from typing import Callable, Any

from telegram import Update, ParseMode
from telegram.ext import CallbackContext, CommandHandler, MessageHandler, Filters

from app.config import config
from app.utils import format_message, check_file_size

logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—Å–∫–∞
START_TIME = datetime.now()

def check_admin(func: Callable) -> Callable:
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    @wraps(func)
    def wrapped(update: Update, context: CallbackContext, *args: Any, **kwargs: Any) -> Any:
        user_id = str(update.effective_user.id)
        if user_id not in config.ADMIN_IDS:
            logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            update.message.reply_text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
            return
        return func(update, context, *args, **kwargs)
    return wrapped

def error_handler(update: Update, context: CallbackContext) -> None:
    """–ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫."""
    logger.error(f"Update {update} –≤—ã–∑–≤–∞–ª –æ—à–∏–±–∫—É {context.error}", exc_info=context.error)
    
    try:
        if update and update.effective_message:
            error_message = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞."
            if str(context.error):
                error_message += f"\n–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: {str(context.error)}"
            update.effective_message.reply_text(error_message)
    except:
        pass

def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user = update.effective_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    message = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
        "ü§ñ –Ø –±–æ—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ.\n"
        "üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–∞–π–ª –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
    )
    
    if str(user.id) in config.ADMIN_IDS:
        message += (
            "\n–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"
            "/test - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º\n"
            "/format - –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π\n"
            "/stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
            "/links - –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏"
        )
    
    update.message.reply_text(message)

def help_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    message = (
        "üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:\n\n"
        "1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–∞–π–ª –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏\n"
        "2Ô∏è‚É£ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Ñ–∞–π–ª–æ–≤:\n"
        "   ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç—ã\n"
        "   ‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n"
        "   ‚Ä¢ –í–∏–¥–µ–æ\n"
        "   ‚Ä¢ –ê—É–¥–∏–æ\n\n"
        "3Ô∏è‚É£ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞:\n"
        "   ‚Ä¢ **–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç**\n"
        "   ‚Ä¢ –°—Å—ã–ª–∫–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n"
        "4Ô∏è‚É£ –ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
    )
    
    if str(update.effective_user.id) in config.ADMIN_IDS:
        message += (
            "\nüëë –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"
            "/test - —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º (—Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç)\n"
            "/format - –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç (markdown/html/plain)\n"
            "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n"
            "/links - –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏"
        )
    
    update.message.reply_text(message)

@check_admin
def test_mode(update: Update, context: CallbackContext) -> None:
    """–í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞."""
    try:
        new_mode = not config.TEST_MODE
        config.TEST_MODE = new_mode
        
        message = (
            f"üîÑ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º {'–≤–∫–ª—é—á–µ–Ω' if new_mode else '–≤—ã–∫–ª—é—á–µ–Ω'}\n"
            f"{'‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç' if new_mode else '‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª'}"
        )
        update.message.reply_text(message)
        logger.info(f"–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º {'–≤–∫–ª—é—á–µ–Ω' if new_mode else '–≤—ã–∫–ª—é—á–µ–Ω'}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞: {e}")
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞")

@check_admin
def format_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /format."""
    args = context.args
    
    if not args:
        current_format = config.DEFAULT_FORMAT
        message = (
            "üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:\n"
            "‚Ä¢ markdown - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π markdown\n"
            "‚Ä¢ html - HTML-—Ä–∞–∑–º–µ—Ç–∫–∞\n"
            "‚Ä¢ plain - –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n"
            "‚Ä¢ modern - —É–ª—É—á—à–µ–Ω–Ω—ã–π markdown (v2)\n\n"
            f"–¢–µ–∫—É—â–∏–π —Ñ–æ—Ä–º–∞—Ç: {current_format}\n\n"
            "–î–ª—è —Å–º–µ–Ω—ã —Ñ–æ—Ä–º–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
            "/format –Ω–∞–∑–≤–∞–Ω–∏–µ_—Ñ–æ—Ä–º–∞—Ç–∞"
        )
        update.message.reply_text(message)
        return
    
    new_format = args[0].lower()
    if new_format not in ['markdown', 'html', 'plain', 'modern']:
        update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: markdown, html, plain –∏–ª–∏ modern")
        return
    
    config.DEFAULT_FORMAT = new_format
    update.message.reply_text(f"‚úÖ –§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {new_format}")
    logger.info(f"–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {new_format}")

@check_admin
def stats(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞."""
    import psutil
    
    uptime = datetime.now() - START_TIME
    hours, remainder = divmod(uptime.seconds, 3600)
    minutes, seconds = divmod(remainder, 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    process = psutil.Process()
    memory_info = process.memory_info()
    cpu_percent = process.cpu_percent(interval=1)
    
    stats_message = (
        "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n\n"
        f"‚è± –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {uptime.days}–¥ {hours}—á {minutes}–º {seconds}—Å\n"
        f"üìù –§–æ—Ä–º–∞—Ç: {config.DEFAULT_FORMAT}\n"
        f"üîÑ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: {'–≤–∫–ª—é—á–µ–Ω' if config.TEST_MODE else '–≤—ã–∫–ª—é—á–µ–Ω'}\n"
        f"üë• –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {len(config.ADMIN_IDS)}\n"
        f"üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: {memory_info.rss / 1024 / 1024:.1f} MB\n"
        f"‚ö° –ó–∞–≥—Ä—É–∑–∫–∞ CPU: {cpu_percent:.1f}%"
    )
    
    update.message.reply_text(stats_message)

@check_admin
def links(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏."""
    message = "üîó –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏:\n\n"
    
    if config.MAIN_BOT_LINK:
        message += f"ü§ñ –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç: {config.MAIN_BOT_LINK}\n"
    
    if config.SUPPORT_BOT_LINK:
        message += f"üí¨ –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞: {config.SUPPORT_BOT_LINK}\n"
    
    if config.CHANNEL_LINK:
        message += f"üì¢ –ö–∞–Ω–∞–ª: {config.CHANNEL_LINK}\n"
    
    if message == "üîó –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏:\n\n":
        message = "‚ùå –ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫"
    
    update.message.reply_text(message)

def handle_message(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–π —á–∞—Ç
        target_chat = config.TEST_CHAT_ID if config.TEST_MODE else config.CHANNEL_ID
        if not target_chat:
            update.message.reply_text("‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω ID –∫–∞–Ω–∞–ª–∞/—á–∞—Ç–∞")
            return
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
        if update.message.document:
            doc = update.message.document
            try:
                check_file_size(doc.file_size)
            except Exception as e:
                update.message.reply_text(str(e))
                return
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            context.bot.send_document(
                chat_id=target_chat,
                document=doc.file_id,
                caption=update.message.caption if update.message.caption else None,
                parse_mode=ParseMode.MARKDOWN if config.DEFAULT_FORMAT == 'markdown' else None
            )
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        elif update.message.text:
            formatted_text = format_message(update.message.text, config.DEFAULT_FORMAT)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            context.bot.send_message(
                chat_id=target_chat,
                text=formatted_text,
                parse_mode=ParseMode.MARKDOWN if config.DEFAULT_FORMAT == 'markdown' else None,
                disable_web_page_preview=True
            )
        
        update.message.reply_text("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {target_chat}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")

def setup_bot(dispatcher):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞."""
    logger.info("=== –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è ===")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("help", help_command))
    dispatcher.add_handler(CommandHandler("test", test_mode))
    dispatcher.add_handler(CommandHandler("format", format_command))
    dispatcher.add_handler(CommandHandler("stats", stats))
    dispatcher.add_handler(CommandHandler("links", links))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    dispatcher.add_handler(MessageHandler(
        Filters.text | Filters.document, 
        handle_message
    ))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    dispatcher.add_error_handler(error_handler)
    
    logger.info("=== –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã ===")