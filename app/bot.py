from app.config import Config
import logging
from telegram import Update, ParseMode
from telegram.ext import (
    Updater, CommandHandler, MessageHandler, 
    Filters, CallbackContext
)
import requests
from app.utils import setup_logging, format_message, check_file_size
import psutil
import os
import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = setup_logging()

def check_admin(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    def wrapper(update: Update, context: CallbackContext, *args, **kwargs):
        user_id = str(update.effective_user.id)
        if user_id not in Config.ADMIN_IDS:
            update.message.reply_text('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
            return
        return func(update, context, *args, **kwargs)
    return wrapper

def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user_id = update.effective_user.id
    if str(user_id) in Config.ADMIN_IDS:
        commands_help = """
*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*

üìù –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
/status - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
/stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        
‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
/restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/update - –û–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ .env
/test - –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
        
üìã –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
/format - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
/setformat <—Ç–∏–ø> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π (markdown/html/plain/modern)
"""
        update.message.reply_text(
            commands_help,
            parse_mode=ParseMode.MARKDOWN
        )
    else:
        update.message.reply_text('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.')

@check_admin
def status(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞."""
    cpu_usage = psutil.cpu_percent()
    memory = psutil.virtual_memory()
    disk = psutil.disk_usage('/')
    uptime = datetime.datetime.now() - datetime.datetime.fromtimestamp(psutil.boot_time())
    
    status_text = f"""
*–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:*

üñ• *–°–∏—Å—Ç–µ–º–∞:*
CPU: {cpu_usage}%
RAM: {memory.percent}%
–î–∏—Å–∫: {disk.percent}%
–ê–ø—Ç–∞–π–º: {str(uptime).split('.')[0]}

‚öôÔ∏è *–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:*
–ö–∞–Ω–∞–ª: {Config.CHANNEL_ID}
–§–æ—Ä–º–∞—Ç: {Config.DEFAULT_FORMAT}
–ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {Config.MAX_FILE_SIZE/1024/1024}MB
–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: {'–í–∫–ª—é—á–µ–Ω ‚úÖ' if Config.TEST_MODE else '–í—ã–∫–ª—é—á–µ–Ω ‚ùå'}

üìä *–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:*
{os.getcwd()}
"""
    update.message.reply_text(status_text, parse_mode=ParseMode.MARKDOWN)

@check_admin
def stats(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞."""
    stats_text = """
*–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:*

üìä *–°–µ–≥–æ–¥–Ω—è:*
–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: [–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤: [–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
–û—à–∏–±–æ–∫: [–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]

üìà *–í—Å–µ–≥–æ:*
–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: [–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤: [–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
–û—à–∏–±–æ–∫: [–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
"""
    update.message.reply_text(stats_text, parse_mode=ParseMode.MARKDOWN)

@check_admin
def settings(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞."""
    from app.utils import format_bot_links
    
    settings_text = f"""
*–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:*

üìù *–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:*
–§–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {Config.DEFAULT_FORMAT}
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {Config.MAX_FILE_SIZE/1024/1024}MB
–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: {'–í–∫–ª—é—á–µ–Ω ‚úÖ' if Config.TEST_MODE else '–í—ã–∫–ª—é—á–µ–Ω ‚ùå'}

üîó *–°—Å—ã–ª–∫–∏:*
{format_bot_links()}

üë• *–î–æ—Å—Ç—É–ø:*
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {', '.join(Config.ADMIN_IDS)}
ID –∫–∞–Ω–∞–ª–∞: {Config.CHANNEL_ID}

üåê *–ü—Ä–æ–∫—Å–∏:*
HTTPS –ø—Ä–æ–∫—Å–∏: {Config.HTTPS_PROXY or "–ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"}
"""
    try:
        update.message.reply_text(settings_text, parse_mode=ParseMode.MARKDOWN)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        update.message.reply_text(
            "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –û—Ç–ø—Ä–∞–≤–ª—è—é –±–µ–∑ —Ä–∞–∑–º–µ—Ç–∫–∏:\n\n" + 
            settings_text.replace('*', '')
        )

@check_admin
def set_format(update: Update, context: CallbackContext) -> None:
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π."""
    if not context.args:
        update.message.reply_text(
            '–£–∫–∞–∂–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /setformat <markdown/html/plain/modern>'
        )
        return
    
    new_format = context.args[0].lower()
    if new_format not in ['markdown', 'html', 'plain', 'modern']:
        update.message.reply_text(
            '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: markdown, html, plain, modern'
        )
        return
    
    update.message.reply_text(f'–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {new_format}')

@check_admin
def format_help(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    format_text = """
*–ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:*

1Ô∏è‚É£ *Modern (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é):*
```
üåü **–ó–∞–≥–æ–ª–æ–≤–æ–∫** üåü
–û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç
üìå **–í–∞–∂–Ω–æ:**
1. –ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç
2. –í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç
```

2Ô∏è‚É£ *Markdown:*
```
*–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç*
_–ö—É—Ä—Å–∏–≤_
[–°—Å—ã–ª–∫–∞](http://example.com)
```

3Ô∏è‚É£ *HTML:*
```
<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>
<i>–ö—É—Ä—Å–∏–≤</i>
<a href="http://example.com">–°—Å—ã–ª–∫–∞</a>
```

4Ô∏è‚É£ *Plain:*
```
–û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
```
"""
    update.message.reply_text(format_text, parse_mode=ParseMode.MARKDOWN)

def handle_message(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
    user_id = update.effective_user.id
    if str(user_id) not in Config.ADMIN_IDS:
        update.message.reply_text('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.')
        return

    try:
        message = update.message
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º parse_mode –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–æ—Ä–º–∞—Ç–∞
        if Config.DEFAULT_FORMAT.lower() == 'markdown':
            parse_mode = ParseMode.MARKDOWN
        elif Config.DEFAULT_FORMAT.lower() == 'html':
            parse_mode = ParseMode.HTML
        else:
            parse_mode = None

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–π —á–∞—Ç
        target_chat_id = (Config.TEST_CHAT_ID or str(user_id)) if Config.TEST_MODE else Config.CHANNEL_ID
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–º–µ—Ç–∫—É –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
        test_prefix = "[–¢–ï–°–¢] " if Config.TEST_MODE else ""

        if message.text:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            formatted_text = format_message(test_prefix + message.text)
            sent_message = context.bot.send_message(
                chat_id=target_chat_id,
                text=formatted_text,
                parse_mode=parse_mode
            )
        elif message.photo:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
            photo = message.photo[-1]
            if not check_file_size(photo.file_size):
                update.message.reply_text('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π.')
                return
            caption = format_message(test_prefix + (message.caption if message.caption else ''))
            sent_message = context.bot.send_photo(
                chat_id=target_chat_id,
                photo=photo.file_id,
                caption=caption,
                parse_mode=parse_mode
            )
        elif message.video:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ
            if not check_file_size(message.video.file_size):
                update.message.reply_text('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π.')
                return
            caption = format_message(test_prefix + (message.caption if message.caption else ''))
            sent_message = context.bot.send_video(
                chat_id=target_chat_id,
                video=message.video.file_id,
                caption=caption,
                parse_mode=parse_mode
            )
        elif message.document:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            if not check_file_size(message.document.file_size):
                update.message.reply_text('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π.')
                return
            caption = format_message(test_prefix + (message.caption if message.caption else ''))
            sent_message = context.bot.send_document(
                chat_id=target_chat_id,
                document=message.document.file_id,
                caption=caption,
                parse_mode=parse_mode
            )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
        if Config.TEST_MODE:
            status_text = (
                f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ\n"
                f"üìù –§–æ—Ä–º–∞—Ç: {Config.DEFAULT_FORMAT}\n"
                f"üéØ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {target_chat_id}\n"
                f"#Ô∏è‚É£ Message ID: {sent_message.message_id}"
            )
        else:
            status_text = "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ –∫–∞–Ω–∞–ª!"
            
        update.message.reply_text(status_text)
        
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}')
        update.message.reply_text(
            f'‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:\n{str(e)}'
        )

@check_admin
def toggle_test_mode(update: Update, context: CallbackContext) -> None:
    """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º."""
    try:
        Config.TEST_MODE = not Config.TEST_MODE
        mode_status = "–≤–∫–ª—é—á–µ–Ω ‚úÖ" if Config.TEST_MODE else "–≤—ã–∫–ª—é—á–µ–Ω ‚ùå"
        target = f"ID {Config.TEST_CHAT_ID}" if Config.TEST_CHAT_ID else "—Ç–µ–∫—É—â–∏–π —á–∞—Ç"
        
        update.message.reply_text(
            f"üîÑ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º {mode_status}\n"
            f"üì® –°–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ {target}"
        )
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞: {e}')
        update.message.reply_text(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}')

def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞."""
    try:
        updater = Updater(Config.BOT_TOKEN)
        dispatcher = updater.dispatcher

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
        dispatcher.add_handler(CommandHandler("start", start))
        dispatcher.add_handler(CommandHandler("help", start))
        dispatcher.add_handler(CommandHandler("status", status))
        dispatcher.add_handler(CommandHandler("stats", stats))
        dispatcher.add_handler(CommandHandler("settings", settings))
        dispatcher.add_handler(CommandHandler("format", format_help))
        dispatcher.add_handler(CommandHandler("setformat", set_format))
        dispatcher.add_handler(CommandHandler("test", toggle_test_mode))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
        dispatcher.add_handler(MessageHandler(
            Filters.text | Filters.photo | Filters.video | Filters.document, 
            handle_message
        ))

        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        if Config.HTTPS_PROXY:
            updater.start_polling(
                bootstrap_retries=-1,
                read_timeout=30,
                connect_timeout=15,
                request_kwargs={
                    'proxy_url': Config.HTTPS_PROXY
                }
            )
        else:
            updater.start_polling()

        logger.info('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
        updater.idle()

    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}')

if __name__ == '__main__':
    main()