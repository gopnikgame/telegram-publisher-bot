import logging
import os
import re
import textwrap
from datetime import datetime
from typing import Dict, Optional, List, Union

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.constants import ParseMode
from telegram.error import BadRequest, TelegramError
from telegram.ext import CallbackContext, CallbackQueryHandler, CommandHandler, filters, MessageHandler, Application

from .html import recreate_markdown_from_entities, markdown_to_html, modern_to_html
from .config import config
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ utils.py
from .utils import format_message, format_bot_links, append_links_to_message

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

# [–û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...]

# –ó–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é create_footer() –Ω–∞ –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ format_bot_links –∏–∑ utils.py
def create_footer() -> str:
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥–ø–∏—Å—å –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É—è —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ utils.py."""
    return format_bot_links('html')

# –ò–∑–º–µ–Ω—è–µ–º send_formatted_message, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å format_message –∏–∑ utils.py
async def send_formatted_message(
    context: CallbackContext,
    chat_id: int,
    message_text: str,
    format_type: str,
    footer: str,
    test_mode_enabled: bool = False,
    target_chat_id: Optional[int] = None
) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º format_message –∏–∑ utils.py –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        formatted_text = format_message(message_text, format_type)
        
        parse_mode = ParseMode.HTML
        
        # –û—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è...
        if test_mode_enabled:
            safe_preview = message_text.replace("<", "&lt;").replace(">", "&gt;")
            preview_message = f"üìù –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏—è:\n\n{safe_preview[:500]}"
            if len(safe_preview) > 500:
                preview_message += "..."
            
            await context.bot.send_message(
                chat_id=chat_id,
                text=preview_message,
                parse_mode=None
            )
        
        if target_chat_id is None:
            target_chat_id = chat_id
        
        message = await context.bot.send_message(
            chat_id=target_chat_id,
            text=formatted_text,
            parse_mode=parse_mode,
            disable_web_page_preview=False
        )
        
        success_message = "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
        if test_mode_enabled:
            success_message += f"\nID —Å–æ–æ–±—â–µ–Ω–∏—è: {message.message_id}"
        
        await context.bot.send_message(
            chat_id=chat_id,
            text=success_message
        )
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {target_chat_id}. ID —Å–æ–æ–±—â–µ–Ω–∏—è: {message.message_id}")
    except Exception as e:
        error_message = str(e)
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {target_chat_id}: {error_message}", exc_info=True)
        
        await context.bot.send_message(
            chat_id=chat_id,
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {error_message}"
        )
        
        if test_mode_enabled:
            safe_text = message_text.replace("<", "&lt;").replace(">", "&gt;")
            debug_info = (
                f"üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:\n\n"
                f"–¶–µ–ª–µ–≤–æ–π —á–∞—Ç: {target_chat_id}\n"
                f"–§–æ—Ä–º–∞—Ç: {format_type}\n"
                f"–†–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥–∞: {parse_mode}\n"
                f"–¢–µ–∫—Å—Ç —Å –æ—à–∏–±–∫–æ–π (—á–∞—Å—Ç—å): {safe_text[:300]}..."
            )
            await context.bot.send_message(
                chat_id=chat_id,
                text=debug_info
            )

# –í —Ñ—É–Ω–∫—Ü–∏–∏ start –∏—Å–ø–æ–ª—å–∑—É–µ–º append_links_to_message –∏–∑ utils.py
async def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start."""
    chat_id = update.effective_chat.id
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞.\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç, –∏ —è –ø–æ–º–æ–≥—É –≤–∞–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –¥–ª—è Telegram.\n"
        "–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /format.\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é\n"
        "/format - –í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    user_id = update.effective_user.id
    if check_admin(user_id):
        message += "\n\n–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"
        message += "/test - –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º\n"
        message += "/setformat [—Ç–∏–ø] - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (markdown, html, modern)"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º append_links_to_message –∏–∑ utils.py –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏
    message = append_links_to_message(message, 'html')
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        await context.bot.send_message(chat_id=chat_id, text=message, parse_mode=ParseMode.HTML)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}", exc_info=True)
        # –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await context.bot.send_message(
            chat_id=chat_id, 
            text="üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /format –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞."
        )


async def help_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help."""
    chat_id = update.effective_chat.id
    
    message = (
        "üìö *–°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é*\n\n"
        "*–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:*\n"
        "‚Ä¢ *Markdown* - –±–∞–∑–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞\n"
        "‚Ä¢ *HTML* - –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å HTML-—Ç–µ–≥–∞–º–∏\n\n"
        "*–ü—Ä–∏–º–µ—Ä—ã Markdown:*\n"
        "‚Ä¢ **–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç** –¥–ª—è –∂–∏—Ä–Ω–æ–≥–æ\n"
        "‚Ä¢ *–ö—É—Ä—Å–∏–≤* –¥–ª—è –∫—É—Ä—Å–∏–≤–∞\n"
        "‚Ä¢ ~~–ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π~~ –¥–ª—è –∑–∞—á–µ—Ä–∫–Ω—É—Ç–æ–≥–æ\n"
        "‚Ä¢ `–ö–æ–¥` –¥–ª—è –º–æ–Ω–æ–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞\n"
        "‚Ä¢ ```\n–ë–ª–æ–∫ –∫–æ–¥–∞\n``` –¥–ª—è –±–ª–æ–∫–∞ –∫–æ–¥–∞\n"
        "‚Ä¢ > –¶–∏—Ç–∞—Ç–∞ –¥–ª—è —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n"
        "‚Ä¢ # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤\n"
        "‚Ä¢ 1. –ü—É–Ω–∫—Ç –¥–ª—è –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤\n"
        "‚Ä¢ - –ü—É–Ω–∫—Ç –¥–ª—è –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤\n"
        "‚Ä¢ [–¢–µ–∫—Å—Ç](https://example.com) –¥–ª—è —Å—Å—ã–ª–æ–∫\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /format, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç."
    )
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å
    footer = create_footer()
    if footer:
        message += footer
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤–º–µ—Å—Ç–æ HTML
    try:
        await context.bot.send_message(
            chat_id=chat_id, 
            text=message, 
            parse_mode=ParseMode.MARKDOWN_V2
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}", exc_info=True)
        # –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await context.bot.send_message(
            chat_id=chat_id, 
            text="–°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ /format. –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –≤–∞—à–µ–≥–æ —Ç–µ–∫—Å—Ç–∞."
        )

async def format_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /format."""
    chat_id = update.effective_chat.id
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞
    keyboard = [
        [
            InlineKeyboardButton("Markdown", callback_data="format_markdown"),
            InlineKeyboardButton("HTML", callback_data="format_html"),
        ],
        [
            InlineKeyboardButton("Modern", callback_data="format_modern"),
        ],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
     
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await context.bot.send_message(
        chat_id=chat_id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:",
        reply_markup=reply_markup
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = update.effective_user.id
    user_states[user_id] = STATE_AWAITING_FORMAT

async def test_mode(update: Update, context: CallbackContext) -> None:
    """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º."""
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    if not check_admin(user_id):
        await context.bot.send_message(
            chat_id=chat_id,
            text="‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."
        )
        return
    
    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º
    current_state = user_states.get(user_id, STATE_NORMAL)
    new_state = STATE_TEST_MODE if current_state != STATE_TEST_MODE else STATE_NORMAL
    user_states[user_id] = new_state
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–µ–∫—É—â–µ–º —Å—Ç–∞—Ç—É—Å–µ
    status_message = "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω" if new_state == STATE_TEST_MODE else "‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –≤—ã–∫–ª—é—á–µ–Ω"
    await context.bot.send_message(chat_id=chat_id, text=status_message)
    
    logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {user_id} {'–≤–∫–ª—é—á–∏–ª' if new_state == STATE_TEST_MODE else '–≤—ã–∫–ª—é—á–∏–ª'} —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º")

async def set_format(update: Update, context: CallbackContext) -> None:
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."""
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    if not check_admin(user_id):
        await context.bot.send_message(
            chat_id=chat_id,
            text="‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç —É–∫–∞–∑–∞–Ω
    if not context.args or len(context.args) < 1:
        await context.bot.send_message(
            chat_id=chat_id,
            text="‚ùå –£–∫–∞–∂–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /setformat [markdown|html|modern]"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    format_type = context.args[0].lower()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
    valid_formats = ["markdown", "html", "modern"]
    if format_type not in valid_formats:
        await context.bot.send_message(
            chat_id=chat_id,
            text=f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö: {', '.join(valid_formats)}"
        )
        return
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    context.bot_data["default_format"] = format_type
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–µ–∫—É—â–µ–º —Å—Ç–∞—Ç—É—Å–µ
    await context.bot.send_message(
        chat_id=chat_id,
        text=f"‚úÖ –§–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {format_type}"
    )
    
    logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {user_id} —É—Å—Ç–∞–Ω–æ–≤–∏–ª —Ñ–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {format_type}")

async def button_handler(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏."""
    query = update.callback_query
    user_id = query.from_user.id
    
    # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback_data
    callback_data = query.data
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞
    if callback_data.startswith("format_"):
        format_type = callback_data.replace("format_", "")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
        context.user_data["format"] = format_type
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        await query.edit_message_text(
            text=f"‚úÖ –§–æ—Ä–º–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {format_type}\n\n–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[user_id] = STATE_AWAITING_MESSAGE
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª —Ñ–æ—Ä–º–∞—Ç: {format_type}")

async def handle_message(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    message = update.message
    user_id = message.from_user.id
    chat_id = message.chat_id
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏ —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    text = message.text
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    state = user_states.get(user_id, STATE_NORMAL)
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if state not in (STATE_AWAITING_FORMAT, STATE_AWAITING_MESSAGE):
        format_type = context.user_data.get("format", context.bot_data.get("default_format", config.DEFAULT_FORMAT)).lower()
    else:
        format_type = context.user_data.get("format", "markdown").lower()
    
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {text}")
    logger.info(f"–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {format_type}")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å
    footer = create_footer()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    test_mode_enabled = state == STATE_TEST_MODE
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–π —á–∞—Ç
    if test_mode_enabled:
        target_chat_id = config.TEST_CHAT_ID if config.TEST_CHAT_ID != 0 else chat_id
    else:
        target_chat_id = config.CHANNEL_ID if config.CHANNEL_ID != 0 else chat_id
    
    await send_formatted_message(
        context,
        chat_id,
        text,
        format_type,
        footer,
        test_mode_enabled,
        target_chat_id
    )

async def send_to_channel(update: Update, context: CallbackContext) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª.
    –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è:
    - –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ: –≤ TEST_CHAT_ID –∏–ª–∏ —Å–µ–±–µ, –µ—Å–ª–∏ TEST_CHAT_ID –Ω–µ —É–∫–∞–∑–∞–Ω
    - –í –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ: –≤ CHANNEL_ID
    
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /send —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if not check_admin(user_id):
        await context.bot.send_message(
            chat_id=chat_id,
            text="‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª."
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
    if not context.args or len(context.args) < 1:
        await context.bot.send_message(
            chat_id=chat_id,
            text="‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: /send —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"
        )
        return
    
    # –°–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≤—Å–µ—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    message_text = ' '.join(context.args)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –≤–∫–ª—é—á–µ–Ω –ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
    test_mode_enabled = user_states.get(user_id) == STATE_TEST_MODE
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–π —á–∞—Ç
    if test_mode_enabled:
        target_chat_id = config.TEST_CHAT_ID if config.TEST_CHAT_ID != 0 else chat_id
        target_name = "—Ç–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª" if config.TEST_CHAT_ID != 0 else "—Ç–µ–∫—É—â–∏–π —á–∞—Ç (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)"
    else:
        target_chat_id = config.CHANNEL_ID if config.CHANNEL_ID != 0 else 0
        target_name = "–æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª" if config.CHANNEL_ID != 0 else ""
    
    if target_chat_id == 0:
        await context.bot.send_message(
            chat_id=chat_id,
            text="‚ùå ID –∫–∞–Ω–∞–ª–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."
        )
        return
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏–ª–∏ —Ñ–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    format_type = context.user_data.get("format", context.bot_data.get("default_format", config.DEFAULT_FORMAT)).lower()
    logger.info(f"–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–∞–Ω–∞–ª–∞: {format_type}")
    
    await send_formatted_message(
        context,
        chat_id,
        message_text,
        format_type,
        create_footer(),
        test_mode_enabled,
        target_chat_id
    )

async def check_channels(update: Update, context: CallbackContext) -> None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö –∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∏—Ö.
    """
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if not check_admin(user_id):
        await context.bot.send_message(
            chat_id=chat_id,
            text="‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã."
        )
        return
    
    # –°–æ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    channels = []
    
    if hasattr(config, 'CHANNEL_ID') and config.CHANNEL_ID != 0:
        channels.append(("–û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª", config.CHANNEL_ID))
    
    if hasattr(config, 'TEST_CHAT_ID') and config.TEST_CHAT_ID != 0:
        channels.append(("–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª", config.TEST_CHAT_ID))
    
    if not channels:
        await context.bot.send_message(
            chat_id=chat_id,
            text="‚ùå –í –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã ID –∫–∞–Ω–∞–ª–æ–≤."
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª–∞–º
    result = "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–∞—Ö:\n\n"
    
    for name, channel_id in channels:
        try:
            # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
            chat_info = await context.bot.get_chat(channel_id)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ
            bot_member = await context.bot.get_chat_member(
                chat_id=channel_id,
                user_id=context.bot.id
            )
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å—Ç–∞—Ç—É—Å–∞
            status = "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω"
            if hasattr(bot_member, 'can_post_messages') and not bot_member.can_post_messages:
                status = "‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
            result += f"{name} ({channel_id}):\n"
            result += f"–ù–∞–∑–≤–∞–Ω–∏–µ: {chat_info.title}\n"
            result += f"–¢–∏–ø: {chat_info.type}\n"
            result += f"–°—Ç–∞—Ç—É—Å: {status}\n\n"
            
        except Exception as e:
            result += f"{name} ({channel_id}):\n"
            result += f"–°—Ç–∞—Ç—É—Å: ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ ({str(e)})\n\n"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
    await context.bot.send_message(
        chat_id=chat_id,
        text=result
    )

async def error_handler(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏."""
    error = context.error
    logger.error(msg=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}", exc_info=True)
    
    try:
        if update and update.effective_chat:
            chat_id = update.effective_chat.id
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            error_message = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞."
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
            if isinstance(error, BadRequest):
                error_message = f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {str(error)}"
            
            # –î–ª—è –∞–¥–º–∏–Ω–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            user_id = update.effective_user.id if update.effective_user else None
            if user_id and check_admin(user_id):
                error_message += f"\n\n–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {str(error)}"
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
                if hasattr(context, 'chat_data') and context.chat_data:
                    error_message += f"\n\n–î–∞–Ω–Ω—ã–µ —á–∞—Ç–∞: {str(context.chat_data)}"
                if hasattr(context, 'user_data') and context.user_data:
                    error_message += f"\n\n–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(context.user_data)}"
             
            await context.bot.send_message(
                chat_id=chat_id,
                text=error_message
            )
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {e}", exc_info=True)

def setup_handlers(application: Application) -> None:
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –±–æ—Ç–∞.
    
    Args:
        application: –≠–∫–∑–µ–º–ø–ª—è—Ä Application –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    """
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("format", format_command))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    application.add_handler(CommandHandler("test", test_mode))
    application.add_handler(CommandHandler("setformat", set_format))
    application.add_handler(CommandHandler("send", send_to_channel))  # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª
    application.add_handler(CommandHandler("channels", check_channels))  # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–Ω–∞–ª–æ–≤
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    application.add_handler(CallbackQueryHandler(button_handler))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    application.add_error_handler(error_handler)
    
    logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")