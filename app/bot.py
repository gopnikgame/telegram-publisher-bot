from telegram import Update, ParseMode, ChatAction
from telegram.ext import (
    Updater, CommandHandler, MessageHandler, 
    Filters, CallbackContext
)
from telegram.error import TelegramError
import logging
from functools import wraps
from typing import Callable, Optional
import datetime
import os

from app.config import config  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
from app.utils import (
    setup_logging, format_message, check_file_size,
    MessageFormattingError, FileSizeError, format_bot_links
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = setup_logging()

# –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
START_TIME = datetime.datetime.now()

def send_typing_action(func: Callable) -> Callable:
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è '–ø–µ—á–∞—Ç–∞–µ—Ç...' –≤–æ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    @wraps(func)
    def command_func(update: Update, context: CallbackContext, *args, **kwargs):
        context.bot.send_chat_action(
            chat_id=update.effective_message.chat_id, 
            action=ChatAction.TYPING
        )
        return func(update, context, *args, **kwargs)
    return command_func

def check_admin(func: Callable) -> Callable:
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    @wraps(func)
    def wrapper(update: Update, context: CallbackContext, *args, **kwargs):
        user_id = str(update.effective_user.id)
        if user_id not in config.ADMIN_IDS:
            update.message.reply_text('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
            return
        return func(update, context, *args, **kwargs)
    return wrapper

def error_handler(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞."""
    logger.error(f"Update {update} caused error {context.error}")
    
    if isinstance(context.error, MessageFormattingError):
        update.message.reply_text(
            f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:\n{str(context.error)}"
        )
    elif isinstance(context.error, FileSizeError):
        update.message.reply_text(
            f"‚ùå –û—à–∏–±–∫–∞ —Å —Ñ–∞–π–ª–æ–º:\n{str(context.error)}"
        )
    elif isinstance(context.error, TelegramError):
        update.message.reply_text(
            f"‚ùå –û—à–∏–±–∫–∞ Telegram API:\n{str(context.error)}"
        )
    else:
        update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω."
        )

@check_admin
def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    message = (
        f"üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ.\n\n"
        f"üìù –¢–µ–∫—É—â–∏–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π: {config.DEFAULT_FORMAT}\n"
        f"üîÑ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: {'–≤–∫–ª—é—á–µ–Ω' if config.TEST_MODE else '–≤—ã–∫–ª—é—á–µ–Ω'}\n\n"
        f"‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        f"/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
        f"/test - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º\n"
        f"/format - –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        f"/stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
        f"/links - –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏"
    )
    update.message.reply_text(message)

@check_admin
def help_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    message = (
        "üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:\n\n"
        "1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–∞–π–ª –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏\n"
        "2Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:\n"
        "/test - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º\n"
        "/format - –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        "/stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
        "/links - –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏\n\n"
        f"‚ÑπÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
        f"üìù –§–æ—Ä–º–∞—Ç: {config.DEFAULT_FORMAT}\n"
        f"üîÑ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: {'–≤–∫–ª—é—á–µ–Ω' if config.TEST_MODE else '–≤—ã–∫–ª—é—á–µ–Ω'}"
    )
    update.message.reply_text(message)
    
@check_admin
def test_mode(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /test."""
    try:
        new_mode = not config.TEST_MODE
        os.environ['TEST_MODE'] = str(new_mode).lower()
        config.TEST_MODE = new_mode
        
        message = (
            f"üîÑ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º {'–≤–∫–ª—é—á–µ–Ω' if new_mode else '–≤—ã–∫–ª—é—á–µ–Ω'}\n"
            f"{'‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç' if new_mode else '‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª'}"
        )
        update.message.reply_text(message)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞: {e}")
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞")

@check_admin
def format_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /format."""
    available_formats = ['markdown', 'html', 'plain', 'modern']
    
    if not context.args:
        current_format = config.DEFAULT_FORMAT
        message = (
            f"üìù –¢–µ–∫—É—â–∏–π —Ñ–æ—Ä–º–∞—Ç: {current_format}\n\n"
            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:\n"
            f"- markdown (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)\n"
            f"- html (HTML-—Ä–∞–∑–º–µ—Ç–∫–∞)\n"
            f"- plain (–±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)\n"
            f"- modern (—É–ª—É—á—à–µ–Ω–Ω—ã–π markdown)\n\n"
            f"–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ:\n"
            f"/format –Ω–∞–∑–≤–∞–Ω–∏–µ_—Ñ–æ—Ä–º–∞—Ç–∞"
        )
        update.message.reply_text(message)
        return
    
    new_format = context.args[0].lower()
    if new_format not in available_formats:
        update.message.reply_text(
            f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:\n"
            f"{', '.join(available_formats)}"
        )
        return
    
    try:
        os.environ['DEFAULT_FORMAT'] = new_format
        config.DEFAULT_FORMAT = new_format
        update.message.reply_text(f"‚úÖ –§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {new_format}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞: {e}")
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞")

@check_admin
@send_typing_action
def status(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞."""
    try:
        cpu_usage = psutil.cpu_percent()
        memory = psutil.virtual_memory()
        disk = psutil.disk_usage('/')
        uptime = datetime.datetime.now() - datetime.datetime.fromtimestamp(psutil.boot_time())
        
        status_text = f"""
*–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:*

üñ• *–°–∏—Å—Ç–µ–º–∞:*
CPU: {cpu_usage}%
RAM: {memory.percent}%
–î–∏—Å–∫: {disk.percent}%
–ê–ø—Ç–∞–π–º: {str(uptime).split('.')[0]}

‚öôÔ∏è *–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:*
–ö–∞–Ω–∞–ª: {Config.CHANNEL_ID}
–§–æ—Ä–º–∞—Ç: {Config.DEFAULT_FORMAT}
–ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {Config.MAX_FILE_SIZE/1024/1024}MB
–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: {'–í–∫–ª—é—á–µ–Ω ‚úÖ' if Config.TEST_MODE else '–í—ã–∫–ª—é—á–µ–Ω ‚ùå'}

üìä *–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:*
{os.getcwd()}
"""
        update.message.reply_text(status_text, parse_mode=ParseMode.MARKDOWN)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: {str(e)}")

@check_admin
def stats(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞."""
    uptime = datetime.datetime.now() - START_TIME
    stats_message = (
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n\n"
        f"‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {uptime}\n"
        f"üîÑ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: {'–≤–∫–ª—é—á–µ–Ω' if config.TEST_MODE else '–≤—ã–∫–ª—é—á–µ–Ω'}\n"
        f"üìù –§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π: {config.DEFAULT_FORMAT}\n"
        f"üì® –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {config.MAX_FILE_SIZE / 1024 / 1024:.1f} MB"
    )
    update.message.reply_text(stats_message)

@check_admin
def links(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏."""
    links_info = format_bot_links(config.DEFAULT_FORMAT)
    message = f"üîó –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏:\n\n{links_info}"
    update.message.reply_text(message, parse_mode=ParseMode.MARKDOWN)

@check_admin
@send_typing_action
def settings(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞."""
    from app.utils import format_bot_links
    
    try:
        settings_text = f"""
*–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:*

üìù *–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:*
–§–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {Config.DEFAULT_FORMAT}
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {Config.MAX_FILE_SIZE/1024/1024}MB
–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: {'–í–∫–ª—é—á–µ–Ω ‚úÖ' if Config.TEST_MODE else '–í—ã–∫–ª—é—á–µ–Ω ‚ùå'}

üîó *–°—Å—ã–ª–∫–∏:*
{format_bot_links(Config.DEFAULT_FORMAT)}

üë• *–î–æ—Å—Ç—É–ø:*
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {', '.join(Config.ADMIN_IDS)}
ID –∫–∞–Ω–∞–ª–∞: {Config.CHANNEL_ID}

üåê *–ü—Ä–æ–∫—Å–∏:*
HTTPS –ø—Ä–æ–∫—Å–∏: {Config.HTTPS_PROXY or "–ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"}
"""
        update.message.reply_text(settings_text, parse_mode=ParseMode.MARKDOWN)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        update.message.reply_text(
            "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –û—Ç–ø—Ä–∞–≤–ª—è—é –±–µ–∑ —Ä–∞–∑–º–µ—Ç–∫–∏:\n\n" + 
            settings_text.replace('*', '')
        )
        
@check_admin
def set_format(update: Update, context: CallbackContext) -> None:
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π."""
    if not context.args:
        update.message.reply_text(
            '–£–∫–∞–∂–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /setformat <markdown/html/plain/modern>'
        )
        return
    
    new_format = context.args[0].lower()
    if new_format not in ['markdown', 'html', 'plain', 'modern']:
        update.message.reply_text(
            '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: markdown, html, plain, modern'
        )
        return
    
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    Config.DEFAULT_FORMAT = new_format
    update.message.reply_text(f'–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {new_format}')

@check_admin
def format_help(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    format_text = """
*–ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:*

1Ô∏è‚É£ *Modern (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é):*
```
üåü **–ó–∞–≥–æ–ª–æ–≤–æ–∫** üåü
–û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç
üìå **–í–∞–∂–Ω–æ:**
1. –ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç
2. –í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç
```

2Ô∏è‚É£ *Markdown:*
```
*–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç*
_–ö—É—Ä—Å–∏–≤_
[–°—Å—ã–ª–∫–∞](http://example.com)
```

3Ô∏è‚É£ *HTML:*
```
<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>
<i>–ö—É—Ä—Å–∏–≤</i>
<a href="http://example.com">–°—Å—ã–ª–∫–∞</a>
```

4Ô∏è‚É£ *Plain:*
```
–û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
```
"""
    update.message.reply_text(format_text, parse_mode=ParseMode.MARKDOWN)

@check_admin
@send_typing_action
def handle_message(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
    try:
        message = update.message
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–æ—Ä–º–∞—Ç–∞
        parse_mode = {
            'markdown': ParseMode.MARKDOWN,
            'html': ParseMode.HTML,
            'modern': ParseMode.MARKDOWN,
            'plain': None
        }.get(config.DEFAULT_FORMAT.lower())
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–π —á–∞—Ç
        target_chat_id = (config.TEST_CHAT_ID or str(update.effective_user.id)) if config.TEST_MODE else config.CHANNEL_ID
        test_prefix = "[–¢–ï–°–¢] " if config.TEST_MODE else ""
        
        if message.document:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
            check_file_size(message.document.file_size)
            
            # –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            caption = message.caption or ''
            formatted_caption = format_message(f"{test_prefix}{caption}", config.DEFAULT_FORMAT)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
            context.bot.send_document(
                chat_id=target_chat_id,
                document=message.document.file_id,
                caption=formatted_caption,
                parse_mode=parse_mode
            )
        else:
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            formatted_text = format_message(f"{test_prefix}{message.text}", config.DEFAULT_FORMAT)
            context.bot.send_message(
                chat_id=target_chat_id,
                text=formatted_text,
                parse_mode=parse_mode
            )
        
        update.message.reply_text("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
    except FileSizeError as e:
        update.message.reply_text(f"‚ùå {str(e)}")
    except MessageFormattingError as e:
        update.message.reply_text(f"‚ùå {str(e)}")
    except TelegramError as e:
        error_message = f"‚ùå –û—à–∏–±–∫–∞ Telegram: {str(e)}"
        logger.error(error_message)
        update.message.reply_text(error_message)
    except Exception as e:
        error_message = f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}"
        logger.error(error_message)
        update.message.reply_text(error_message)

@check_admin
def toggle_test_mode(update: Update, context: CallbackContext) -> None:
    """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º."""
    try:
        Config.TEST_MODE = not Config.TEST_MODE
        mode_status = "–≤–∫–ª—é—á–µ–Ω ‚úÖ" if Config.TEST_MODE else "–≤—ã–∫–ª—é—á–µ–Ω ‚ùå"
        target = f"ID {Config.TEST_CHAT_ID}" if Config.TEST_CHAT_ID else "—Ç–µ–∫—É—â–∏–π —á–∞—Ç"
        
        update.message.reply_text(
            f"üîÑ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º {mode_status}\n"
            f"üì® –°–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ {target}"
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞: {e}")
        update.message.reply_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    try:
        updater = Updater(config.BOT_TOKEN)
        dispatcher = updater.dispatcher
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
        dispatcher.add_handler(CommandHandler("start", start))
        dispatcher.add_handler(CommandHandler("help", help_command))
        dispatcher.add_handler(CommandHandler("test", test_mode))
        dispatcher.add_handler(CommandHandler("format", format_command))
        dispatcher.add_handler(CommandHandler("stats", stats))
        dispatcher.add_handler(CommandHandler("links", links))
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        dispatcher.add_handler(MessageHandler(
            Filters.text | Filters.document, 
            handle_message
        ))
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        if config.HTTPS_PROXY:
            updater.start_polling(
                bootstrap_retries=-1,
                read_timeout=30,
                connect_timeout=15,
                request_kwargs={
                    'proxy_url': config.HTTPS_PROXY
                }
            )
        else:
            updater.start_polling()
        
        logger.info('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω')
        updater.idle()
        
    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        raise

if __name__ == '__main__':
    main()